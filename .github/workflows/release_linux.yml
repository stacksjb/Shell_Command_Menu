name: Release Binaries (Linux)

on:
  push:
    tags:
      - 'v*'  # Trigger on tags starting with "v" (e.g., v1.0.0)

jobs:
  build-linux:
    name: Build and Release Linux Binary
    runs-on: ubuntu-latest  # The job will run on an Ubuntu runner

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v4  # Correct use of 'uses' within steps

    # Set up Rust toolchain
    - name: Set up Rust toolchain
      uses: dtolnay/rust-toolchain@stable  # Set up the Rust toolchain
      
    # Install Linux dependencies (for alsa-sys and other potential native dependencies)
    - name: Install Linux ALSA dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev  # Install ALSA development libraries
        sudo apt-get install -y pkg-config      # Ensure pkg-config is installed

    # Build for Linux (this is where the actual build for the target is done)
    - name: Build for Linux
      run: |
        cargo build --release --target x86_64-unknown-linux-gnu

    # Create the binaries directory if it doesn't exist
    - name: Create release binaries directory
      run: |
        mkdir -p target/release/binaries
    
    # Copy the built binary into the binaries directory
    - name: Copy Linux binary
      run: |
        cp target/x86_64-unknown-linux-gnu/release/shell_command_menu target/release/binaries/


    - name: Zip and rename the binary
      run: |
        cd target/release/binaries
        tar -czf shell_command_menu_linux.tgz shell_command_menu  # Create a .tgz archive of the binary

    # Upload the binaries to the GitHub release
    - name: Upload binaries to GitHub release
      uses: softprops/action-gh-release@v2.2.2  # Use the updated version of gh-release
      with:
        token: ${{ secrets.GH_PAT_CLI_MENU }}  # GitHub token for authentication
        files: target/release/binaries/shell_command_menu_linux.tgz  # Upload the .tgz file
